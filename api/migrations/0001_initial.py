# Generated by Django 5.0.4 on 2024-05-01 09:53

import api.managers
import api.utils
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('numero_tel', models.CharField(blank=True, max_length=12, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', api.managers.ClientManager()),
            ],
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('localisation', models.URLField(blank=True, null=True)),
                ('commune', models.CharField(choices=[('Alger_Centre', 'Alger Centre'), ('Sidi_Mhamed', 'Sidi Mhamed'), ('El_Madania', 'El Madania'), ('Belouizdad', 'Belouizdad'), ('Bab_El_Oued', 'Bab El Oued'), ('Bologhine', 'Bologhine'), ('Casbah', 'Casbah'), ('Oued_Koriche', 'Oued Koriche'), ('Bir_Mourad_Rais', 'Bir Mourad Rais'), ('El_Biar', 'El Biar'), ('Bouzareah', 'Bouzareah'), ('Birkhadem', 'Birkhadem'), ('El_Harrach', 'El Harrach'), ('Baraki', 'Baraki'), ('Oued_Smar', 'Oued Smar'), ('Bourouba', 'Bourouba'), ('Hussein_Dey', 'Hussein Dey'), ('Kouba', 'Kouba'), ('Bachedjerah', 'Bachedjerah'), ('Dar_El_Beida', 'Dar El Beida'), ('Bab_Azzouar', 'Bab Azzouar'), ('Ben_Aknoun', 'Ben Aknoun'), ('Dely_Ibrahim', 'Dely Ibrahim'), ('El_Hammamet', 'El Hammamet'), ('Rais_Hamidou', 'Rais Hamidou'), ('Djasr_Kasentina', 'Djasr Kasentina'), ('El_Mouradia', 'El Mouradia'), ('Hydra', 'Hydra'), ('Mohammadia', 'Mohammadia'), ('Bordj_El_Kiffan', 'Bordj El Kiffan'), ('El_Magharia', 'El Magharia'), ('Beni_Messous', 'Beni Messous'), ('Les_Eucalyptus', 'Les Eucalyptus'), ('Birtouta', 'Birtouta'), ('Tassala_El_Merdja', 'Tassala El Merdja'), ('Ouled_Chebel', 'Ouled Chebel'), ('Sidi_Moussa', 'Sidi Moussa'), ('Ain_Taya', 'Ain Taya'), ('Bordj_El_Bahri', 'Bordj El Bahri'), ('Marsa', 'Marsa'), ('Haraoua', 'Haraoua'), ('Rouiba', 'Rouiba'), ('Reghaia', 'Reghaia'), ('Ain_Benian', 'Ain Benian'), ('Staoueli', 'Staoueli'), ('Zeralda', 'Zeralda'), ('Mahelma', 'Mahelma'), ('Rahmania', 'Rahmania'), ('Souidania', 'Souidania'), ('Cheraga', 'Cheraga'), ('Ouled_Fayet', 'Ouled Fayet'), ('El_Achour', 'El Achour'), ('Draria', 'Draria'), ('Douera', 'Douera'), ('Baba_Hassen', 'Baba Hassen'), ('Khracia', 'Khracia'), ('Saoula', 'Saoula')], max_length=100)),
                ('capacite', models.IntegerField(blank=True, default=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Voiture',
            fields=[
                ('id', models.CharField(default=api.utils.generate_short_id, editable=False, max_length=8, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('api.profile',),
            managers=[
                ('objects', api.managers.ClientManager()),
            ],
        ),
        migrations.CreateModel(
            name='Park',
            fields=[
                ('id', models.CharField(default=uuid.UUID('8c91cb32-9a1f-4602-825e-0ee4239495b8'), editable=False, max_length=8, primary_key=True, serialize=False)),
                ('dateDebut', models.DateTimeField()),
                ('dateFin', models.DateTimeField(blank=True, null=True)),
                ('parking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parks', to='api.parking')),
                ('voiture', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parks', to='api.voiture')),
            ],
        ),
        migrations.CreateModel(
            name='Verificateur',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('verif_id', models.CharField(default=api.utils.generate_short_id, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('parking', models.ManyToManyField(related_name='verifcateurs', to='api.parking')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('api.profile',),
            managers=[
                ('objects', api.managers.ClientManager()),
            ],
        ),
    ]
